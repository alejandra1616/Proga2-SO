/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static GUI.Central1.fetchPolicy;
import static GUI.Central1.multiprogramming;
import static GUI.Central1.replacementPolicy;
import static GUI.Central1.residenSet;
import static GUI.Central1.scope;
import static GUI.Central1.sizeResidentSet;
import static GUI.Central1.tamañoMemoriaFisica;
import static GUI.Central1.tamañoPagina;
import static java.lang.Math.abs;
import java.sql.Timestamp;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import simuladormemoria.Pagina;
import simuladormemoria.Requi;
import simuladormemoria.Simulacion;
import static simuladormemoria.Simulacion.FIFO;
import static simuladormemoria.Simulacion.LFU;
import static simuladormemoria.Simulacion.LRU;
import static simuladormemoria.Simulacion.MRU;
import static simuladormemoria.Simulacion.Prepaging;
import static simuladormemoria.Simulacion.SecondChance;
import static simuladormemoria.Simulacion.TXTRequisiciones;
import static simuladormemoria.Simulacion.cambioPagina;
import static simuladormemoria.Simulacion.creaPagina;
import static simuladormemoria.Simulacion.impresionListasVirtual;
import static simuladormemoria.Simulacion.lista_requis;
import static simuladormemoria.Simulacion.local;
import static simuladormemoria.Simulacion.memoriaFisica;
import static simuladormemoria.Simulacion.traerDeMemoriaVirtual;

/**
 *
 * @author Ale
 */
public class JFrameMamoria extends javax.swing.JFrame {

    /**
     * Creates new form JFrameMamoria
     */
    
    public JFrameMamoria() {
        initComponents();
        llenarMemoriaVirtual();
        llenarMemoriaFisica();
        Simulacion sim = new Simulacion();
        creaPagina(tamañoPagina, multiprogramming);
        Prepaging(sizeResidentSet); 
        TXTRequisiciones();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMemoriaVirtual = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMemoriaFisica = new javax.swing.JTable();
        btnAyuda = new javax.swing.JButton();
        btnNextRequest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estadísticas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Memoria usada:");

        jLabel2.setText("Memoria disponible:");

        jLabel3.setText("Page-faults:");

        jLabel4.setText("Número total de accesos:");

        jLabel5.setText("Procentaje de utilización:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Memoria Virtual", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jTableMemoriaVirtual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMemoriaVirtual.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTableMemoriaVirtualComponentAdded(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMemoriaVirtual);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Memoria Física"));

        jTableMemoriaFisica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableMemoriaFisica);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAyuda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAyuda.setText("Ayuda");

        btnNextRequest.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNextRequest.setText("Siguiente requisición");
        btnNextRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(btnNextRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableMemoriaVirtualComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTableMemoriaVirtualComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMemoriaVirtualComponentAdded

    private void btnNextRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextRequestActionPerformed
       if(!lista_requis.isEmpty()){
        simulacionTotal();
        System.out.println("Dele siguiente");
       }else{
           System.out.println("Termino");
       }
    }//GEN-LAST:event_btnNextRequestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InstantiationException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameMamoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameMamoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMamoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameMamoria().setVisible(true);
            }
        });
    }
   
   public void reemplazo(Requi request){
       System.out.println("Entro a reemplazo");
       ArrayList<Pagina> lista = new ArrayList<Pagina>();
       if(residenSet){
           System.out.println("Es local");
          lista= local(request);
       }
       else if(scope==false){
           System.out.println("Es local");
           lista= local(request);
       }
       else{
           System.out.println("Es global");
           lista=memoriaFisica;
       }
       
       
       switch(replacementPolicy){
           case"FIFO":
               cambioPagina(traerDeMemoriaVirtual(request),FIFO(lista)); 
               System.out.println("Termino Fifo");
               break;
           case"LRU":
               cambioPagina(traerDeMemoriaVirtual(request),LRU(lista));
               System.out.println("Termino LRU");
               break;
           case "MRU":
               cambioPagina(traerDeMemoriaVirtual(request),MRU(lista));
               System.out.println("Termino MRU");
               break;
           case"LFU":
               cambioPagina(traerDeMemoriaVirtual(request),LFU(lista)); 
               System.out.println("Termino LFU");
               break;
           case"SecondChance":
               cambioPagina(traerDeMemoriaVirtual(request),SecondChance(lista));
               System.out.println("Termino SecondChance");
               break;
           default:
               System.out.println("NO existe");
               break;
      
       
       }
       System.out.println("Termino reemplzo");
       
       
   }
   public void simulacionTotal(){
       System.out.println("--------------------------------------------------------------------------------------Entro SimulacionTotal");
       Requi req = Simulacion.lista_requis.get(0);
       impresionListasVirtual();
         //Revisa si está cargada
       if(memoriaFisica.indexOf(traerDeMemoriaVirtual(req)) != -1){
           System.out.println("Mierda dentro: " + traerDeMemoriaVirtual(req).getId());
           int pos = memoriaFisica.indexOf(traerDeMemoriaVirtual(req));
           memoriaFisica.get(pos).setSucia(true);
           Timestamp currentTime = new Timestamp(System.currentTimeMillis());
           memoriaFisica.get(pos).setHoraUso(currentTime);
           memoriaFisica.get(pos).aumentarAcceso();
           System.out.println("ESTÁ ENSUCIANDO");
           
        //Revisa si la memoria no está llena y es variable
        }else if(memoriaFisica.size()!=(abs(tamañoMemoriaFisica/tamañoPagina)) && residenSet == false){
           Pagina pagina = traerDeMemoriaVirtual(req);
           Timestamp currentTime = new Timestamp(System.currentTimeMillis());
           pagina.setHoraEntrada(currentTime);
           pagina.setHoraUso(currentTime);
           pagina.setSucia(true);
           pagina.aumentarAcceso();
           memoriaFisica.add(pagina);
           System.out.println("NO LLENA Y VARIABLE");
           
        //Revisa si esta llena y es variable
       }else if(memoriaFisica.size()==(abs(tamañoMemoriaFisica/tamañoPagina)) && residenSet == false){
           System.out.println("Fisica llena y es variable");
           Pagina pagina = traerDeMemoriaVirtual(req);
           reemplazo(req);
           System.out.println("LLENA Y VARIABLE");

           //No está cargado y es fixed
        }else if(residenSet){
           System.out.println("Es fixed");
           Pagina pagina = traerDeMemoriaVirtual(req);
           reemplazo(req);
           
       }
       Simulacion.lista_requis.remove(0);
   }
   
   public void llenarMemoriaVirtual(){
    DefaultTableModel modelo = new DefaultTableModel();
    jTableMemoriaVirtual.setModel(modelo);

    //Modifica cabezara o columnas de la tabla
    modelo.setColumnIdentifiers(new Object [] {

       "1", "2", "3", "4", "5"

    });

    //Agrega una fila a la tabla      
    Object [] object = new Object[]{"1","Jose","Hernandez","310928382","Hola"};
    modelo.addRow(object); 
     
   }
   
   public void llenarMemoriaFisica(){
    DefaultTableModel modelo = new DefaultTableModel();
    jTableMemoriaFisica.setModel(modelo);

    //Modifica cabezara o columnas de la tabla
    modelo.setColumnIdentifiers(new Object [] {

       "1", "2", "3", "4", "5"

    });

    //Agrega una fila a la tabla      
    Object [] object = new Object[]{"1","Jose","Hernandez","310928382","Hola"};
    modelo.addRow(object); 
     
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda;
    private javax.swing.JButton btnNextRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMemoriaFisica;
    private javax.swing.JTable jTableMemoriaVirtual;
    // End of variables declaration//GEN-END:variables
}
